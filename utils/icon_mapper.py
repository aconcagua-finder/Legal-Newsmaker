"""
Icon Mapper –¥–ª—è NEWSMAKER
–ú–∞–ø–ø–∏–Ω–≥ —ç–º–æ–¥–∑–∏ –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
"""

from typing import Dict, Optional, Tuple
from enum import Enum


class IconStyle(Enum):
    """–°—Ç–∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫"""
    EMOJI = "emoji"          # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏
    TEXT = "text"            # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    RICH = "rich"            # Rich library —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    HTML = "html"            # HTML –∏–∫–æ–Ω–∫–∏
    UNICODE = "unicode"      # Unicode —Å–∏–º–≤–æ–ª—ã


class IconMapper:
    """–ö–ª–∞—Å—Å –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ —ç–º–æ–¥–∑–∏ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã"""
    
    def __init__(self, style: IconStyle = IconStyle.TEXT):
        self.style = style
        
        # –ú–∞–ø–ø–∏–Ω–≥ —ç–º–æ–¥–∑–∏ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
        self.icon_map = {
            '‚öôÔ∏è': {
                'text': '[CONFIG]',
                'rich': '[bold cyan]‚öô[/bold cyan]',
                'html': '<i data-lucide="settings" class="icon icon-primary"></i>',
                'unicode': '‚öô',
                'description': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'
            },
            'üîß': {
                'text': '[TOOLS]',
                'rich': '[bold yellow]üîß[/bold yellow]',
                'html': '<i data-lucide="wrench" class="icon icon-secondary"></i>',
                'unicode': 'üîß',
                'description': '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'
            },
            'üöÄ': {
                'text': '[START]',
                'rich': '[bold green]‚Üí[/bold green]',
                'html': '<i data-lucide="rocket" class="icon icon-success"></i>',
                'unicode': '‚Üí',
                'description': '–ó–∞–ø—É—Å–∫'
            },
            'üìä': {
                'text': '[STATS]',
                'rich': '[bold blue]‚ñà[/bold blue]',
                'html': '<i data-lucide="bar-chart-3" class="icon icon-info"></i>',
                'unicode': '‚ñà',
                'description': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'
            },
            'üìù': {
                'text': '[LOG]',
                'rich': '[dim]‚ñ™[/dim]',
                'html': '<i data-lucide="file-text" class="icon icon-primary"></i>',
                'unicode': '‚ñ™',
                'description': '–õ–æ–≥'
            },
            'üí¨': {
                'text': '[MSG]',
                'rich': '[bold]‚óÜ[/bold]',
                'html': '<i data-lucide="message-circle" class="icon icon-secondary"></i>',
                'unicode': '‚óÜ',
                'description': '–°–æ–æ–±—â–µ–Ω–∏–µ'
            },
            '‚è∞': {
                'text': '[TIME]',
                'rich': '[yellow]‚óâ[/yellow]',
                'html': '<i data-lucide="clock" class="icon icon-warning"></i>',
                'unicode': '‚óâ',
                'description': '–í—Ä–µ–º—è'
            },
            'üíæ': {
                'text': '[SAVE]',
                'rich': '[green]‚ñº[/green]',
                'html': '<i data-lucide="save" class="icon icon-success"></i>',
                'unicode': '‚ñº',
                'description': '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ'
            },
            'üîç': {
                'text': '[SEARCH]',
                'rich': '[cyan]‚óé[/cyan]',
                'html': '<i data-lucide="search" class="icon icon-info"></i>',
                'unicode': '‚óé',
                'description': '–ü–æ–∏—Å–∫'
            },
            'üì∞': {
                'text': '[NEWS]',
                'rich': '[bold]‚ñ£[/bold]',
                'html': '<i data-lucide="newspaper" class="icon icon-dark"></i>',
                'unicode': '‚ñ£',
                'description': '–ù–æ–≤–æ—Å—Ç–∏'
            },
            '‚ú®': {
                'text': '[NEW]',
                'rich': '[bright_yellow]‚òÖ[/bright_yellow]',
                'html': '<i data-lucide="sparkles" class="icon icon-warning"></i>',
                'unicode': '‚òÖ',
                'description': '–ù–æ–≤–æ–µ'
            },
            'üé®': {
                'text': '[ART]',
                'rich': '[magenta]‚óà[/magenta]',
                'html': '<i data-lucide="palette" class="icon icon-gradient"></i>',
                'unicode': '‚óà',
                'description': '–î–∏–∑–∞–π–Ω'
            },
            '‚úÖ': {
                'text': '[OK]',
                'rich': '[bold green]‚úì[/bold green]',
                'html': '<i data-lucide="check-circle" class="icon icon-success"></i>',
                'unicode': '‚úì',
                'description': '–£—Å–ø–µ—à–Ω–æ'
            },
            '‚ùå': {
                'text': '[ERROR]',
                'rich': '[bold red]‚úó[/bold red]',
                'html': '<i data-lucide="x-circle" class="icon icon-danger"></i>',
                'unicode': '‚úó',
                'description': '–û—à–∏–±–∫–∞'
            },
            'üéâ': {
                'text': '[SUCCESS]',
                'rich': '[bold bright_green]‚ô¶[/bold bright_green]',
                'html': '<i data-lucide="party-popper" class="icon icon-success"></i>',
                'unicode': '‚ô¶',
                'description': '–ü—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ'
            },
            'üõë': {
                'text': '[STOP]',
                'rich': '[bold red]‚ñ†[/bold red]',
                'html': '<i data-lucide="octagon" class="icon icon-danger"></i>',
                'unicode': '‚ñ†',
                'description': '–°—Ç–æ–ø'
            },
            '‚èπÔ∏è': {
                'text': '[PAUSE]',
                'rich': '[dim]‚ñ™[/dim]',
                'html': '<i data-lucide="square" class="icon icon-muted"></i>',
                'unicode': '‚ñ™',
                'description': '–ü–∞—É–∑–∞'
            },
            'üí•': {
                'text': '[CRITICAL]',
                'rich': '[bold bright_red]![/bold bright_red]',
                'html': '<i data-lucide="zap" class="icon icon-danger"></i>',
                'unicode': '!',
                'description': '–ö—Ä–∏—Ç–∏—á–Ω–æ'
            },
            'üß™': {
                'text': '[TEST]',
                'rich': '[cyan]‚óä[/cyan]',
                'html': '<i data-lucide="flask" class="icon icon-info"></i>',
                'unicode': '‚óä',
                'description': '–¢–µ—Å—Ç'
            }
        }
        
        # –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
        self.colors = {
            'reset': '\033[0m',
            'bold': '\033[1m',
            'dim': '\033[2m',
            'red': '\033[91m',
            'green': '\033[92m',
            'yellow': '\033[93m',
            'blue': '\033[94m',
            'magenta': '\033[95m',
            'cyan': '\033[96m',
            'white': '\033[97m'
        }
    
    def get_icon(self, emoji: str, style: Optional[IconStyle] = None) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –≤ –Ω—É–∂–Ω–æ–º —Å—Ç–∏–ª–µ
        
        Args:
            emoji: –≠–º–æ–¥–∑–∏ –¥–ª—è –∑–∞–º–µ–Ω—ã
            style: –°—Ç–∏–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π)
            
        Returns:
            –°—Ç—Ä–æ–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        """
        current_style = style or self.style
        
        if current_style == IconStyle.EMOJI:
            return emoji
        
        if emoji not in self.icon_map:
            return emoji  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –µ—Å–ª–∏ –Ω–µ—Ç –º–∞–ø–ø–∏–Ω–≥–∞
        
        style_key = current_style.value
        if style_key in self.icon_map[emoji]:
            return self.icon_map[emoji][style_key]
        
        # Fallback –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        return self.icon_map[emoji].get('text', emoji)
    
    def replace_all_emojis(self, text: str, style: Optional[IconStyle] = None) -> str:
        """
        –ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ —ç–º–æ–¥–∑–∏ –≤ —Ç–µ–∫—Å—Ç–µ
        
        Args:
            text: –¢–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏
            style: –°—Ç–∏–ª—å –∑–∞–º–µ–Ω—ã
            
        Returns:
            –¢–µ–∫—Å—Ç —Å –∑–∞–º–µ–Ω–µ–Ω–Ω—ã–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏
        """
        result = text
        for emoji in self.icon_map.keys():
            if emoji in result:
                result = result.replace(emoji, self.get_icon(emoji, style))
        return result
    
    def get_colored_icon(self, emoji: str, color: str = 'green') -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç–Ω—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
        
        Args:
            emoji: –≠–º–æ–¥–∑–∏
            color: –¶–≤–µ—Ç (red, green, yellow, blue, magenta, cyan)
            
        Returns:
            –¶–≤–µ—Ç–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
        """
        icon = self.get_icon(emoji, IconStyle.UNICODE)
        if color in self.colors:
            return f"{self.colors[color]}{self.colors['bold']}{icon}{self.colors['reset']}"
        return icon
    
    def get_status_icon(self, status: str) -> Tuple[str, str]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
        
        Args:
            status: –°—Ç–∞—Ç—É—Å (success, error, warning, info, pending)
            
        Returns:
            –ö–æ—Ä—Ç–µ–∂ (–∏–∫–æ–Ω–∫–∞, —Ü–≤–µ—Ç)
        """
        status_map = {
            'success': ('‚úÖ', 'green'),
            'error': ('‚ùå', 'red'),
            'warning': ('‚è∞', 'yellow'),
            'info': ('üìä', 'blue'),
            'pending': ('‚è∞', 'yellow'),
            'critical': ('üí•', 'red'),
            'start': ('üöÄ', 'green'),
            'stop': ('üõë', 'red')
        }
        
        if status in status_map:
            emoji, color = status_map[status]
            return self.get_colored_icon(emoji, color), color
        
        return self.get_icon('üìù'), 'white'
    
    def format_for_rich(self, text: str) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è Rich library
        
        Args:
            text: –¢–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏
            
        Returns:
            –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è Rich
        """
        return self.replace_all_emojis(text, IconStyle.RICH)
    
    def format_for_html(self, text: str) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è HTML
        
        Args:
            text: –¢–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏
            
        Returns:
            HTML —Å –∏–∫–æ–Ω–∫–∞–º–∏
        """
        return self.replace_all_emojis(text, IconStyle.HTML)
    
    def strip_all_icons(self, text: str) -> str:
        """
        –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∫–æ–Ω–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
        
        Args:
            text: –¢–µ–∫—Å—Ç —Å –∏–∫–æ–Ω–∫–∞–º–∏
            
        Returns:
            –ß–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç
        """
        result = text
        for emoji in self.icon_map.keys():
            result = result.replace(emoji, '')
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–∞—Ä–∫–µ—Ä—ã
        for icon_data in self.icon_map.values():
            if 'text' in icon_data:
                result = result.replace(icon_data['text'], '')
        
        return result.strip()


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–∞–ø–ø–µ—Ä–∞
icon_mapper = IconMapper()


# –£–¥–æ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
def get_icon(emoji: str, style: IconStyle = IconStyle.TEXT) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –≤ –Ω—É–∂–Ω–æ–º —Å—Ç–∏–ª–µ"""
    return icon_mapper.get_icon(emoji, style)


def replace_emojis(text: str, style: IconStyle = IconStyle.TEXT) -> str:
    """–ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ —ç–º–æ–¥–∑–∏ –≤ —Ç–µ–∫—Å—Ç–µ"""
    return icon_mapper.replace_all_emojis(text, style)


def get_status_icon(status: str) -> Tuple[str, str]:
    """–ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞"""
    return icon_mapper.get_status_icon(status)


def strip_icons(text: str) -> str:
    """–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∫–æ–Ω–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    return icon_mapper.strip_all_icons(text)


if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    mapper = IconMapper()
    
    test_text = "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã... ‚úÖ –£—Å–ø–µ—à–Ω–æ! üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞."
    
    print("–û—Ä–∏–≥–∏–Ω–∞–ª:", test_text)
    print("TEXT:", mapper.replace_all_emojis(test_text, IconStyle.TEXT))
    print("UNICODE:", mapper.replace_all_emojis(test_text, IconStyle.UNICODE))
    print("RICH:", mapper.replace_all_emojis(test_text, IconStyle.RICH))
    print("–ë–µ–∑ –∏–∫–æ–Ω–æ–∫:", mapper.strip_all_icons(test_text))